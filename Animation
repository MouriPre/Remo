local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local animations = {
    ["Confident"] = {
        idle = 1069977950,
        secondIdle = 1069987858,
        walk = 1070017263,
        run = 1070001516,
        swim = 1070009914,
        jump = 1069984524,
        swimIdle = 1070012133,
        climb = 1069946257,
        fall = 1069973677
    },
    ["Popstar"] = {
        idle = 1212900985,
        secondIdle = 1212954651,
        walk = 1212980338,
        run = 1212980348,
        swim = 1212852603,
        jump = 1069984524,
        swimIdle = 1212998578,
        climb = 1213044953,
        fall = 1212900995
    },
    ["Patrol"] = {
        idle = 1149612882,
        secondIdle = 1150842221,
        walk = 1151231493,
        run = 1150967949,
        swim = 1151204998,
        jump = 1150944216,
        swimIdle = 1151221899,
        climb = 1148811837,
        fall = 1148863382
    },
    ["Sneaky"] = {
        idle = 1132473842,
        secondIdle = 1132477671,
        walk = 1132510133,
        run = 1132494274,
        swim = 1132500520,
        jump = 1132489853,
        swimIdle = 1132506407,
        climb = 1132461372,
        fall = 1132469004
    },
    ["Princess"] = {
        idle = 941003647,
        secondIdle = 941013098,
        walk = 941028902,
        run = 941015281,
        swim = 941018893,
        jump = 941008832,
        swimIdle = 941025398,
        climb = 940996062,
        fall = 941000007
    },
    ["Cowboy"] = {
        idle = 1014390418,
        secondIdle = 1014398616,
        walk = 1014421541,
        run = 1014401683,
        swim = 1014406523,
        jump = 1014394726,
        swimIdle = 1014411816,
        climb = 1014380606,
        fall = 1014384571
    },
    ["Stylized Female"] = {
        idle = 4708191566,
        secondIdle = 4708192150,
        walk = 4708193840,
        run = 4708192705,
        swim = 4708189360,
        jump = 4708188025,
        swimIdle = 4708190607,
        climb = 4708184253,
        fall = 4708186162
    },
    ["Ninja"] = {
        idle = 658832408,
        secondIdle = 658832408,
        walk = 658831143,
        run = 658830056,
        swim = 658832807,
        jump = 658832070,
        swimIdle = 658832807,
        climb = 658833139,
        fall = 658831500
    },
    ["Cartoony"] = {
        idle = 837011741,
        secondIdle = 837011741,
        walk = 837010234,
        run = 837009922,
        swim = 837012509,
        jump = 837011171,
        swimIdle = 837012509,
        climb = 837013990,
        fall = 837010685
    },
    ["Levitation"] = {
        idle = 619542203,
        secondIdle = 619542203,
        walk = 619544080,
        run = 619543231,
        swim = 619543721,
        jump = 619542888,
        swimIdle = 619543721,
        climb = 619541458,
        fall = 619541867
    },
    ["Stylish"] = {
        idle = 619511648,
        secondIdle = 619511648,
        walk = 619512767,
        run = 619512153,
        swim = 619512450,
        jump = 619511974,
        swimIdle = 619512450,
        climb = 619509955,
        fall = 619511417
    },
    ["Vampire"] = {
        idle = 1113742618,
        secondIdle = 1113742618,
        walk = 1113741192,
        run = 1113740510,
        swim = 1113742944,
        jump = 1113742359,
        swimIdle = 1113742944,
        climb = 1113743239,
        fall = 1113742092
    },
    ["Robot"] = {
        idle = 619521748,
        secondIdle = 619521748,
        walk = 619522849,
        run = 619522386,
        swim = 619522642,
        jump = 619522088,
        swimIdle = 619522642,
        climb = 619521311,
        fall = 619521521
    },
    ["Toy"] = {
        idle = 973771666,
        secondIdle = 973771666,
        walk = 973767371,
        run = 973766674,
        swim = 973772659,
        jump = 973770652,
        swimIdle = 973772659,
        climb = 973773170,
        fall = 973768058
    },
    ["Bubbly"] = {
        idle = 1018553897,
        secondIdle = 1018553897,
        walk = 1018549681,
        run = 1018548665,
        swim = 1018554245,
        jump = 1018553240,
        swimIdle = 1018554245,
        climb = 1018554668,
        fall = 1018552770
    },
    ["Zombie"] = {
        idle = 619535834,
        secondIdle = 619535834,
        walk = 619537468,
        run = 619536621,
        swim = 619537096,
        jump = 619536283,
        swimIdle = 619537096,
        climb = 619535091,
        fall = 619535616
    },
    ["Elder"] = {
        idle = 892268340,
        secondIdle = 892268340,
        walk = 892267099,
        run = 892265784,
        swim = 892268710,
        jump = 892267917,
        swimIdle = 892268710,
        climb = 892269341,
        fall = 892267521
    },
    ["Superhero"] = {
        idle = 619528125,
        secondIdle = 619528125,
        walk = 619529601,
        run = 619528716,
        swim = 619529095,
        jump = 619528412,
        swimIdle = 619529095,
        climb = 619527470,
        fall = 619527817
    },
    ["Werewolf"] = {
        idle = 1113752682,
        secondIdle = 1113752682,
        walk = 1113751657,
        run = 1113750642,
        swim = 1113752975,
        jump = 1113752285,
        swimIdle = 1113752975,
        climb = 1113754738,
        fall = 1113751889
    },
    ["Mage"] = {
        idle = 754637456,
        secondIdle = 754637456,
        walk = 754636298,
        run = 754635032,
        swim = 754638471,
        jump = 754637084,
        swimIdle = 754638471,
        climb = 754639239,
        fall = 754636589
    },
    ["Astronaut"] = {
        idle = 1090133099,
        secondIdle = 1090133099,
        walk = 1090131576,
        run = 1090130630,
        swim = 1090133583,
        jump = 1090132507,
        swimIdle = 1090133583,
        climb = 1090134016,
        fall = 1090132063
    },
    ["Pirate"] = {
        idle = 837024662,
        secondIdle = 837024662,
        walk = 837023892,
        run = 837023444,
        swim = 837025054,
        jump = 837024350,
        swimIdle = 837025054,
        climb = 837025325,
        fall = 837024147
    },
    ["Knight"] = {
        idle = 734327140,
        secondIdle = 734327140,
        walk = 734326330,
        run = 734325948,
        swim = 734327363,
        jump = 734326930,
        swimIdle = 734327363,
        climb = 734329002,
        fall = 734326679
    }
}

local currentAnimator = nil
local updateConnection = nil
local idleTimer = 0
local isSecondIdle = false
local selectedAnimation = "Confident"

local function cleanupAnimations()
    if updateConnection then
        updateConnection:Disconnect()
        updateConnection = nil
    end
    
    if currentAnimator then
        for _, track in pairs(currentAnimator:GetPlayingAnimationTracks()) do
            track:Stop()
            track:Destroy()
        end
        currentAnimator:Destroy()
        currentAnimator = nil
    end
end

local function changeAnimation(animName)
    selectedAnimation = animName
    
    local character = LocalPlayer.Character
    local humanoid = character and character:FindFirstChild("Humanoid")
    if not humanoid then return end
    
    cleanupAnimations()
    
    currentAnimator = Instance.new("Animator")
    currentAnimator.Parent = humanoid
    
    local animTracks = {}
    local currentAnim = "idle"
    local animSet = animations[animName]
    
    local function loadAnim(id, name)
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://" .. id
        animation.Name = name
        
        local success, animTrack = pcall(function()
            return currentAnimator:LoadAnimation(animation)
        end)
        
        if success then
            animTrack.Looped = (name == "idle" or name == "secondIdle" or 
                              name == "walk" or name == "run" or 
                              name == "swim" or name == "swimIdle" or 
                              name == "climb")
            
            animTrack.Priority = name == "idle" and Enum.AnimationPriority.Idle 
                or (name == "jump" or name == "fall") and Enum.AnimationPriority.Action 
                or Enum.AnimationPriority.Movement
        end
        
        return animTrack
    end
    
    for name, id in pairs(animSet) do
        animTracks[name] = loadAnim(id, name)
    end
    
    local function playAnimation(name)
        if currentAnim == name then return end
        
        if animTracks[currentAnim] and animTracks[currentAnim].IsPlaying then
            animTracks[currentAnim]:Stop(0.1)
        end
        
        if animTracks[name] and not animTracks[name].IsPlaying then
            animTracks[name]:Play(0.1)
        end
        
        currentAnim = name
        
        if name ~= "idle" and name ~= "secondIdle" then
            idleTimer = 0
            isSecondIdle = false
        end
    end
    
    local function updateAnimationState()
        if not character:IsDescendantOf(game.Workspace) then
            cleanupAnimations()
            return
        end
        
        local velocity = humanoid.MoveDirection.Magnitude
        local state = humanoid:GetState()
        
        if state == Enum.HumanoidStateType.Swimming then
            if velocity > 0 then
                playAnimation("swim")
            else
                playAnimation("swimIdle")
            end
        elseif state == Enum.HumanoidStateType.Climbing then
            playAnimation("climb")
        elseif state == Enum.HumanoidStateType.Jumping then
            playAnimation("jump")
        elseif state == Enum.HumanoidStateType.Freefall then
            playAnimation("fall")
        elseif velocity > 0 then
            if humanoid.WalkSpeed > 16 then
                playAnimation("run")
            else
                playAnimation("walk")
            end
            idleTimer = 0
            isSecondIdle = false
        else
            if currentAnim ~= "idle" and currentAnim ~= "secondIdle" then
                playAnimation("idle")
            end
            
            idleTimer = idleTimer + RunService.Heartbeat:Wait()
            
            if idleTimer >= 10 and not isSecondIdle then
                playAnimation("secondIdle")
                isSecondIdle = true
            elseif idleTimer >= 20 then
                playAnimation("idle")
                idleTimer = 0
                isSecondIdle = false
            end
        end
    end
    
    updateConnection = RunService.Heartbeat:Connect(updateAnimationState)
    
    character.AncestryChanged:Connect(function(_, parent)
        if not parent then
            cleanupAnimations()
        end
    end)
    
    playAnimation("idle")
end

LocalPlayer.CharacterAdded:Connect(function(character)
    wait(0.5)
    if selectedAnimation then
        changeAnimation(selectedAnimation)
    end
end)

sections.PlaSection1:Dropdown({
    Name = "FE Animation Changer",
    Default = "Confident",
    Options = {"Confident", "Popstar", "Patrol", "Sneaky", "Princess", "Cowboy", "Stylized Female",
              "Ninja", "Cartoony", "Levitation", "Stylish", "Vampire", "Robot", "Toy", "Bubbly",
              "Zombie", "Elder", "Superhero", "Werewolf", "Mage", "Astronaut", "Pirate", "Knight"},
    Callback = function(Value)
        changeAnimation(Value)
        Window:Notify({
            Title = "Animation Changer",
            Content = "Đã đổi sang animation " .. Value
        })
    end
}, "AnimationChanger")
